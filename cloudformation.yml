Resources:
  RDSSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "RDS security group"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 3306
          ToPort: 3306
          CidrIp: "0.0.0.0/0"
      VpcId: "vpc-05c8f743e67755bc3" 
      Tags:
        - Key: Name
          Value: WordpressRDSSG
  RDSInstance:
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBName: "wordpress"
      Engine: "mysql"
      EngineVersion: "5.7"
      MasterUsername: "wordpress"
      MasterUserPassword: "password"
      DBInstanceClass: "db.t2.micro"
      AllocatedStorage: "20"
      StorageType: "gp2"
      DBSubnetGroupName: "default-vpc-05c8f743e67755bc3"
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
      MultiAZ: false
      PubliclyAccessible: false
      Tags:
        - Key: Name
          Value: WordpressRDS

  EFSSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "EFS security group"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 2049
          ToPort: 2049
          CidrIp: "0.0.0.0/0"
      VpcId: "vpc-05c8f743e67755bc3" 
      Tags:
        - Key: Name
          Value: WordpressEFSSG

  EC2SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "EC2 security group"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
      VpcId: "vpc-05c8f743e67755bc3" 
      Tags:
        - Key: Name
          Value: WordpressEC2SG
  EC2InstanceA:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-02f3f602d23f1659d"
      InstanceType: "t2.micro"
      KeyName: "wordpress-key-pair"
      NetworkInterfaces:
        - DeviceIndex: "0"
          SubnetId: "subnet-088f40d103e0fe35a"
          PrivateIpAddress: "10.0.0.10"
          GroupSet:
            - !Ref EC2SecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum -y update
          yum -y install amazon-efs-utils
          mount -t efs fs-066e8e211309d0777:/ /var/www/
          echo 'fs-066e8e211309d0777:/ /var/www/ efs defaults,_netdev 0 0' >> /etc/fstab
          mount -a
          yum -y install httpd
          echo '<html><body><h1>My EFS Web Server</h1></body></html>' > /var/www/html/index.html
          systemctl start httpd
          systemctl enable httpd
      Tags:
        - Key: Name
          Value: WordpressEC2ZoneA
  EC2InstanceB:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-02f3f602d23f1659d"
      InstanceType: "t2.micro"
      KeyName: "wordpress-key-pair"
      NetworkInterfaces:
        - DeviceIndex: "0"
          SubnetId: "subnet-0313ec7cf5d6a4b01"
          PrivateIpAddress: "10.0.16.10"
          GroupSet:
            - !Ref EC2SecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum -y update
          yum -y install amazon-efs-utils
          mount -t efs fs-066e8e211309d0777:/ /var/www/
          echo 'fs-066e8e211309d0777:/ /var/www/ efs defaults,_netdev 0 0' >> /etc/fstab
          mount -a
          yum -y install httpd
          echo '<html><body><h1>My EFS Web Server</h1></body></html>' > /var/www/html/index.html
          systemctl start httpd
          systemctl enable httpd
      Tags:
        - Key: Name
          Value: WordpressEC2ZoneB

  LoadBalancerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Load balancer security group"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
      VpcId: "vpc-05c8f743e67755bc3" 
      Tags:
        - Key: Name
          Value: WordpressLBSG
  LoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: "my-lb"
      Scheme: "internet-facing"
      Subnets:
        - "subnet-088f40d103e0fe35a"
        - "subnet-0313ec7cf5d6a4b01"
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Tags:
        - Key: Name
          Value: WordpressLB
  TargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Name: "my-target-group"
      Port: 80
      Protocol: "HTTP"
      TargetType: "ip"
      VpcId: "vpc-05c8f743e67755bc3" 
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      HealthCheckPort: "80"
      HealthCheckProtocol: "HTTP"
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 5
      Tags:
        - Key: Name
          Value: WordpressTG
  Listener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: "forward"
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: "HTTP"
      Tags:
        - Key: Name
          Value: WordpressListener
